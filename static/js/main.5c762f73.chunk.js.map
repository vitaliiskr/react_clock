{"version":3,"sources":["Clock.js","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","timerId","setInterval","setState","console","log","prevProps","clockName","props","clearInterval","className","React","Component","App","isClockVisible","showClock","hideClock","setClockName","String","Math","floor","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,SACH,CAAEN,MAAM,IAAIC,MAAOC,uBAGrBK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAZP,gCAeE,SAAmBS,GAAY,IACrBC,EAAcP,KAAKQ,MAAnBD,UAEJD,EAAUC,YAAcA,GAE1BH,QAAQC,IAAR,qCAA0CC,EAAUC,UAApD,eAAoEA,MApB1E,kCAwBE,WACEE,cAAcT,KAAKC,WAzBvB,oBA4BE,WACE,OACE,0BAAMS,UAAU,SAASV,KAAKJ,MAAMC,UA9B1C,GAA2Bc,IAAMC,YC4ClBC,E,4MAzCbjB,MAAQ,CACNkB,gBAAgB,EAChBP,UAAW,S,EAGbQ,UAAY,WACV,EAAKZ,SACH,CAAEW,gBAAgB,K,EAItBE,UAAY,WACV,EAAKb,SACH,CAAEW,gBAAgB,K,EAItBG,aAAc,WACZ,EAAKd,SACH,CAAEI,UAAWW,OAAOC,KAAKC,MAAM,GAAAD,KAAKE,UAA2B,M,4CAInE,WACE,OACE,yBAAKX,UAAU,OACb,2CACA,2CAEG,IACAV,KAAKJ,MAAMkB,gBACT,kBAAC,EAAD,CAAOP,UAAWP,KAAKJ,MAAMW,aAElC,4BAAQe,KAAK,SAASC,QAASvB,KAAKe,WAApC,cACA,4BAAQO,KAAK,SAASC,QAASvB,KAAKgB,WAApC,cACA,4BAAQM,KAAK,SAASC,QAASvB,KAAKiB,cAApC,oB,GApCUN,IAAMC,WCDxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5c762f73.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState(\n        { time: new Date().toLocaleTimeString() },\n      );\n      // eslint-disable-next-line\n      console.log(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { clockName } = this.props;\n\n    if (prevProps.clockName !== clockName) {\n      // eslint-disable-next-line max-len\n      console.log(`The Clock was renamed from ${prevProps.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <span className=\"clock\">{this.state.time}</span>\n    );\n  }\n}\n\nClock.propTypes = {\n  clockName: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Clock } from './Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 'Petro',\n  }\n\n  showClock = () => {\n    this.setState(\n      { isClockVisible: true },\n    );\n  }\n\n  hideClock = () => {\n    this.setState(\n      { isClockVisible: false },\n    );\n  }\n\n  setClockName= () => {\n    this.setState(\n      { clockName: String(Math.floor(Math.random() * (50 - 0 + 1)) + 0) },\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current Time:\n          {' '}\n          {this.state.isClockVisible\n          && <Clock clockName={this.state.clockName} />}\n        </p>\n        <button type=\"button\" onClick={this.showClock}>Show Clock</button>\n        <button type=\"button\" onClick={this.hideClock}>Hide Clock</button>\n        <button type=\"button\" onClick={this.setClockName}>Random Name</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}